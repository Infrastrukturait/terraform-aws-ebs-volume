name: Workflow Keepalive
description: Re-enable workflows (self or list)
branding:
  icon: activity
  color: red
inputs:
  GITHUB_TOKEN:
    required: false
    description: GITHUB_TOKEN with actions: write (default: github.token)
  workflows:
    required: false
    description: |
      Newline-separated workflow file names or paths to enable, e.g.:
      ".github/workflows/build.yml\ncron.yml".
      If empty → enables the current workflow (self).
runs:
  using: composite
  steps:
    - name: Ensure gh is authenticated
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.GITHUB_TOKEN || github.token }}
      run: |
        set -euo pipefail
        gh auth status -h github.com || gh auth login --with-token <<<"${GH_TOKEN}"

    - name: Enable current workflow (self) if no list provided
      if: ${{ !inputs.workflows }}
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.GITHUB_TOKEN || github.token }}
      run: |
        set -euo pipefail
        case "${GITHUB_WORKFLOW_REF:?}" in
          "${GITHUB_REPOSITORY:?}"/.github/workflows/*.y*ml@*) ;;
          *) echo "Not a valid repo workflow ref; aborting." >&2; exit 1 ;;
        esac
        wf="${GITHUB_WORKFLOW_REF%%@*}"
        wf="${wf#${GITHUB_REPOSITORY}/.github/workflows/}"   # → "foo.yml"
        enc="$(printf '%s' "$wf" | jq -sRr @uri)"
        echo "Enabling self workflow: $wf"
        gh api -X PUT \
          -H "Accept: application/vnd.github+json" \
          "/repos/${GITHUB_REPOSITORY}/actions/workflows/${enc}/enable" \
          >/dev/null 2>&1 || { echo "Failed to enable $wf" >&2; exit 1; }

    - name: Enable provided workflow list
      if: ${{ inputs.workflows }}
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.GITHUB_TOKEN || github.token }}
      run: |
        set -euo pipefail
        echo "${{ inputs.workflows }}" | while IFS= read -r wf; do
          [ -z "$wf" ] && continue
          # Accept either full path or just file name
          case "$wf" in
            .github/workflows/*.y*ml) wf="${wf##*/}";;
            *.y*ml) ;;
            *) echo "Skipping non-workflow entry: $wf"; continue ;;
          esac
          enc="$(printf '%s' "$wf" | jq -sRr @uri)"
          echo "Enabling workflow: $wf"
          gh api -X PUT \
            -H "Accept: application/vnd.github+json" \
            "/repos/${GITHUB_REPOSITORY}/actions/workflows/${enc}/enable" \
            >/dev/null 2>&1 || { echo "Failed to enable $wf" >&2; exit 1; }
        done
